package mop;

import java.io.*;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging.Level;
PipedStream_SingleThread(PipedInputStream i, PipedOutputStream o, Thread t) {
	creation event create1(PipedOutputStream o, PipedInputStream i){
	}
	creation event create2(PipedInputStream i, PipedOutputStream o){
	}
	creation event create3(PipedInputStream i, PipedOutputStream o){
	}
	creation event create4(PipedOutputStream o, PipedInputStream i){
	}
	event write(PipedOutputStream o, Thread t){
	}
	event read(PipedInputStream i, Thread t){
	}
	ere:  (create1 | create2 | create3 | create4) (write* | read*)

	@fail
	{
		RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		RVMLogging.out.println(Level.CRITICAL, "A single thread attempted to use both a PipedInputStream instance and a PipedOutputStream instance, which may deadlock the thread.");
	}
}
